{"version":3,"sources":["serviceWorker.ts","services/save.local.storage.ts","models/user.ts","keys.tsx","pages/tableGame/map.tsx","pages/login/login.tsx","components/cardAuthor/card.author.tsx","layout/grid.authors.tsx","pages/createUser/createUser.tsx","pages/pageNotFound/pageNotFound.tsx","pages/inputScore/inputScore.tsx","services/file.downloader.service.ts","components/footer/footer.component.tsx","pages/tableGame/tableGame.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","catch","error","console","message","StorageService","key","value","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","User","id","uuid","name","score","level","icon","currentLevel","Keys","USER","MAP","SPAWN","IS_CHANGE_INPUT","AUX_SPAWN","PAGE_LOGIN","PAGE_CREATE_USER","PAGE_TABLE_GAME","PAGE_INPUT_SCORE","TYPE_ZIP","TYPE_EDUCAPLAY","TYPE_HTML","BoardMap","storageService","spawn","i","j","boardMap","this","set","map","get","r","c","LoginPage","props","useState","userName","setUserName","visible","setVisible","history","useHistory","user","className","src","htmlFor","type","onChange","e","target","onClick","push","userJson","saveInitialMap","handleEnter","log","CardAuthor","action","author","alt","GridAuthors","cards","forEach","aut","CreateUserPage","PageNotFound","InputScore","inputScore","setInputScore","lvl","state","valueAsNumber","scores","FileDownloader","downloadFile","fileName","FileSaver","saveAs","FooterComponent","beforeSpawn","suma","numero","TableGame","useEffect","initializeGame","setTimeout","alert","document","body","width","height","character","getElementById","viewBox","querySelector","HTMLElement","offsetWidth","offsetHeight","charWidth","Math","floor","row","column","changeSpawn","mapTable","Game","initialize","list","quarters","data-game-col","data-game-row","mapLS","saveMap","saveNewSpawn","viewbox","allowance","space","columns","rows","fps","left","top","activeKeyX","activeKeyY","onLand","position","jumpSpeed","hasEvent","scroll","animation","won","dead","open","x","y","total","element","reload","levelName","levelJson","selectorLevel","fileDownloader","resource","focus","info","Number","pathname","lvlJson","o","d","m","w","h","a","s","k","l","boxName","isNaN","gameWin","inLevel","p","collidable","collision","f","g","style","backgroundImage","mode","classList","add","remove","b","addEventListener","keyCode","animateCharacter","v","children","dataset","gameRow","gameCol","renderCharacter","requestAnimationFrame","render","bind","u","moveCharacter","gravity","createControls","createMap","initializeCharacter","App","exact","path","component","require","config","__dirname","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.2ad248cb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","\r\nexport class StorageService {\r\n\r\n    /**\r\n     * Set the custom item in local storage\r\n     */\r\n    set(key: string, value: any) {\r\n            return localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n    /**\r\n     * get the custom item in local storage\r\n     */\r\n    get(key: string) {\r\n            return JSON.parse(<string>localStorage.getItem(key));\r\n    }\r\n    /**\r\n     * destroy the custom item in local storage\r\n     */\r\n    destroy(key: string) {\r\n            return localStorage.removeItem(key);\r\n    }\r\n\r\n}\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport const Score = {\r\n    level: 1,\r\n    score: 0\r\n}\r\n\r\nexport const User = {\r\n    id: uuid(),\r\n    name:\"\",\r\n    score: [Score],\r\n    icon: '',\r\n    currentLevel: 1\r\n};\r\n","export class Keys {\r\n    //General\r\n    static USER: string = \"__userJson\";\r\n    static MAP: string = \"__map\";\r\n    static SPAWN: string = \"__spawn\";\r\n    static IS_CHANGE_INPUT = \"__isChange\";\r\n    static AUX_SPAWN = \"__auxSpawn\";\r\n    //Pages\r\n    static PAGE_LOGIN: string = \"/\";\r\n    static PAGE_CREATE_USER: string = \"/Crear-Usuario\";\r\n    static PAGE_TABLE_GAME: string = \"/Juego\"\r\n    static PAGE_INPUT_SCORE: string = \"/Guardar-Puntaje\"\r\n    //Types games\r\n    static TYPE_ZIP: string = \"zip\";\r\n    static TYPE_EDUCAPLAY: string = \"educaplay\";\r\n    static TYPE_HTML: string = \"html\";\r\n}","import React from \"react\";\r\nimport {StorageService} from \"../../services/save.local.storage\";\r\nimport {Keys} from \"../../keys\";\r\n\r\nexport class BoardMap {\r\n    storageService = new StorageService();\r\n    spawn = {i: 1, j: 1};\r\n    boardMap = [\r\n        ['*', ' ', '*', ' ', ' ', ' ', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', ' ', ' ', ' '],\r\n        ['*', 'S', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '5', ' ', ' ', ' ', '6', ' ', ' ', ' ', ' ', '*'],\r\n        ['*', ' ', '*', ' ', ' ', 'L', '*', '3', 'L', '*', '*', ' ', '*', '*', ' ', '*', '*', '*', '*', ' ', ' ', 'L', '*'],\r\n        ['*', ' ', '*', ' ', '*', ' ', '*', '*', ' ', ' ', '4', ' ', '*', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*'],\r\n        ['*', ' ', '*', '2', ' ', ' ', '*', ' ', ' ', '*', '*', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*', 'H'],\r\n        ['*', ' ', '*', '*', ' ', ' ', '*', 'L', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', '*', ' ', ' ', 'H'],\r\n        ['H', ' ', ' ', ' ', ' ', ' ', 'L', ' ', '*', ' ', 'L', ' ', '9', ' ', ' ', '8', ' ', ' ', ' ', '7', ' ', ' ', 'H'],\r\n        ['H', ' ', '1', '#', '#', 'L', 'H', ' ', '*', ' ', '#', ' ', '*', '*', ' ', '*', '*', ' ', ' ', '#', '#', 'L', 'H'],\r\n        ['H', ' ', '#', 'H', 'H', 'L', 'H', '#', 'O', '10', 'H', ' ', ' ', ' ', '*', ' ', ' ', ' ', '#', 'H', 'H', ' ', 'H'],\r\n        ['H', '#', 'H', 'H', 'H', 'H', 'H', 'H', '*', '#', 'H', '#', '#', '#', 'H', '#', '#', '#', 'H', 'H', 'H', 'H', 'H']\r\n    ];\r\n\r\n    /**\r\n     * Save the initial map and the initial spawn coordinates.\r\n     * @constructor\r\n     */\r\n    saveInitialMap() {\r\n        this.storageService.set(Keys.MAP, this.boardMap);\r\n        this.storageService.set(Keys.SPAWN, this.spawn);\r\n    }\r\n\r\n    getInitialMap() {\r\n        return this.boardMap;\r\n    }\r\n\r\n    getInitialSpawn() {\r\n        return this.spawn;\r\n    }\r\n\r\n    saveMap(i: number, j: number, value: string) {\r\n        let map = this.storageService.get(Keys.MAP);\r\n        map[i][j] = value;\r\n        this.storageService.set(Keys.MAP, map);\r\n    }\r\n\r\n    saveNewSpawn(r: number, c: number) {\r\n        this.spawn.i = r;\r\n        this.spawn.j = c;\r\n        this.storageService.set(Keys.SPAWN, this.spawn);\r\n    }\r\n}","import React, {FunctionComponent, useEffect, useState} from 'react';\r\nimport './loginStyle.scss';\r\nimport {StorageService} from '../../services/save.local.storage';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {SendEmail} from \"../../services/send.email\";\r\nimport {User} from '../../models/user';\r\nimport {Keys} from '../../keys';\r\nimport {BoardMap} from \"../tableGame/map\";\r\n\r\nexport const LoginPage = (props: any) => {\r\n    const [userName, setUserName] = useState('');\r\n    const [visible, setVisible] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const storageService = new StorageService();\r\n\r\n    let user = User;\r\n    user = storageService.get(Keys.USER);\r\n\r\n    /**\r\n     * Button handler (\"Entrar\").\r\n     * @param e event\r\n     */\r\n    const handleEnter = (e: any) => {\r\n        if ((user != null)) { //There is a user created\r\n            if (user.icon !== \"\") {\r\n                history.push(Keys.PAGE_TABLE_GAME);\r\n            } else {\r\n                history.push(Keys.PAGE_CREATE_USER)\r\n            }\r\n        } else {\r\n            let userJson = User;\r\n            userJson.name = userName;\r\n            user = userJson;\r\n            storageService.set(Keys.USER, user);\r\n            storageService.set(Keys.IS_CHANGE_INPUT, null);\r\n            let map = new BoardMap();\r\n            map.saveInitialMap();\r\n            history.push(Keys.PAGE_CREATE_USER);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Button handler for change the user name\r\n     * @param e Event\r\n     */\r\n    const handleChangeName = (e: any) => {\r\n        user.name = userName;\r\n        storageService.set(Keys.USER, user);\r\n        setVisible(false);\r\n        console.log(\"User name has been changed\")\r\n    }\r\n\r\n    const text = 'Lorem Ipsum er ganske enkelt dummy tekst fra trykkeri- og typebransjen. Lorem Ipsum har vært bransjens standard dummy-tekst helt siden 1500-tallet, da en ukjent skriver tok en bysse av typen og krypset den for å lage en type eksemplarbok. Det har overlevd ikke bare fem århundrer, men også spranget til elektronisk setting, og forblir i hovedsak uendret. Det ble popularisert på 1960-tallet med utgivelsen av Letraset-ark som inneholder Lorem Ipsum-passasjer, og mer nylig med desktop-publiseringsprogramvare som Aldus PageMaker inkludert versjoner av Lorem Ipsum.';\r\n    const text2 = 'Den vanlige delen av Lorem Ipsum brukt siden 1500-tallet er gjengitt nedenfor for de som er interessert. Avsnittene 1.10.32 og 1.10.33 fra \"de Finibus Bonorum et Malorum\" av Cicero er også gjengitt i sin eksakte originale form, ledsaget av engelske versjoner fra 1914-oversettelsen av H. Rackham.';\r\n    const text3 = 'Aliquam fringilla luctus sagittis. Curabitur quis erat sodales, feugiat dui vel, hendrerit tellus. Vestibulum id neque ipsum. Sed interdum, lectus sit amet condimentum iaculis, mi erat ullamcorper arcu, ac fringilla nisi tortor sit amet eros. Sed sed iaculis massa. Nam sed sagittis urna. Morbi sodales blandit mi, id tristique nunc accumsan sed.';\r\n    const text4 = 'Curabitur vel vehicula eros. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Aliquam sollicitudin nibh non pellentesque ornare. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Quisque ultricies vel augue a tincidunt.';\r\n    const text5 = 'Cras porta libero ipsum, eget sagittis metus scelerisque at. Integer elementum risus eleifend, tristique eros et, convallis massa. Maecenas bibendum, quam sit amet accumsan aliquet, enim mi elementum tortor, nec condimentum dui mi vitae augue. Nunc sit amet libero turpis.';\r\n    const text6 = 'Vivamus a scelerisque eros. Curabitur in ex nunc. Donec non felis ac libero auctor ornare vitae sit amet lectus. Nulla sagittis condimentum augue, vel commodo augue gravida sit amet.';\r\n\r\n    return <>\r\n        <div className=\"container-all\">\r\n            <div className=\"book\">\r\n                    <span className=\"page turn\">\r\n                        {text}\r\n                    </span>\r\n                <span className=\"page turn\">\r\n                        {text2}\r\n                    </span>\r\n                <span className=\"page turn\">\r\n                        {text3}\r\n                    </span>\r\n                <span className=\"page turn\">\r\n                        {text4}\r\n                    </span>\r\n                <span className=\"page turn\">\r\n                        {text5}\r\n                    </span>\r\n                <span className=\"page turn\">\r\n                        {text6}\r\n                    </span>\r\n                <span className=\"cover\"></span>\r\n                <span className=\"page\"></span>\r\n                <span className=\"cover turn\">\r\n                        <img\r\n                            src=\"https://ep00.epimg.net/cultura/imagenes/2013/06/15/actualidad/1371283072_174122_1371283573_noticia_normal.jpg\"/>\r\n                    </span>\r\n            </div>\r\n            <div className=\"login-container\">\r\n                <form>\r\n                    {(() => {\r\n                        if (user == null) {\r\n                            return <div className=\"inputGroup inputGroup2\">\r\n                                <label htmlFor=\"password\">Nombre de usuario</label>\r\n                                <input type=\"text\" id=\"nombre_usuario\" className=\"password\"\r\n                                       onChange={(e) => setUserName(e.target.value)}/>\r\n                            </div>\r\n                        } else {\r\n                            return <div className=\"divNameLabel\">\r\n                                <label className=\"labelName\" htmlFor=\"password\">Usuario: {user.name}</label>\r\n                            </div>\r\n                        }\r\n                    })()}\r\n                    <div className=\"inputGroup inputGroup3\">\r\n                        <button id=\"login\" onClick={(e) => handleEnter(e)}>Entrar</button>\r\n                    </div>\r\n                    {(() => {\r\n                        if (user != null && visible) {\r\n                            return <>\r\n                                <div className=\"inputGroup inputGroup2\">\r\n                                    <label htmlFor=\"password\">Cambiar nombre de usuario</label>\r\n                                    <input type=\"text\" id=\"change-user-name\" className=\"password\"\r\n                                           onChange={(e) => setUserName(e.target.value)}/>\r\n                                </div>\r\n                                <div className=\"inputGroup inputGroup3\">\r\n                                    <button id=\"btn-change\" onClick={(e) => handleChangeName(e)}>Cambiar</button>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                        if (user != null && !visible) {\r\n                            return <div className=\"inputGroup inputGroup3\">\r\n                                <button id=\"changeName\" onClick={() => setVisible(true)}>Cambiar nombre</button>\r\n                            </div>\r\n                        }\r\n                    })()}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n","import React from 'react';\r\nimport './cardAuthor.scss';\r\nimport {Keys} from \"../../keys\";\r\nimport {StorageService} from \"../../services/save.local.storage\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nexport const CardAuthor = (props: any) => {\r\n    const history = useHistory();\r\n    const storageService = new StorageService();\r\n    let user = storageService.get(Keys.USER);\r\n    /**\r\n     * handler when the user has selected a card.\r\n     * @param action\r\n     */\r\n    const handle = (action: any) => {\r\n        if (user) {\r\n            if (action) {\r\n                console.log(\"Se eligió un autor\")\r\n                user.icon = props.author;\r\n                storageService.set(Keys.USER, user);\r\n                history.push(Keys.PAGE_TABLE_GAME);\r\n            } else {\r\n                console.log(\"No se ha elegido un autor\")\r\n                history.push(Keys.PAGE_LOGIN);\r\n            }\r\n        }\r\n    }\r\n    return <>\r\n        <div className=\"container\" onClick={(e) => handle(e)}>\r\n            <img src={props.author.icon} alt={props.author.name}/>\r\n            <p className=\"title\">{props.author.name}</p>\r\n            <div className=\"overlay\"></div>\r\n        </div>\r\n    </>\r\n};\r\n","import React from 'react';\r\nimport author from '../mocks/authors.json';\r\nimport {CardAuthor} from \"../components/cardAuthor/card.author\";\r\nimport './grid.authors.scss';\r\n\r\nexport const GridAuthors = (props: any) => {\r\n\r\n    const cards = () => {\r\n        let authors = author;\r\n        let cards: JSX.Element[] = [];\r\n        authors.forEach((aut) => {\r\n            cards.push(<CardAuthor author={aut} key={aut.id}/>)\r\n        });\r\n        return cards;\r\n    }\r\n    return <>\r\n        <div className=\"selector-title-container\">\r\n            <h1 className=\"selector-title\">Elige un escritor</h1>\r\n        </div>\r\n        <div className='layoutContainer'>\r\n            {cards()}\r\n        </div>\r\n    </>\r\n}\r\n","import React, {FunctionComponent, useEffect, useState} from 'react';\r\n\r\nimport {GridAuthors} from \"../../layout/grid.authors\";\r\n\r\nexport const CreateUserPage = (props: any)=>{\r\n\r\n    return <>\r\n        <GridAuthors/>\r\n        </>\r\n}\r\n","import React from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport {Keys} from \"../../keys\";\r\nimport './pageNotFound.scss';\r\n\r\nexport const PageNotFound = (props: any) => {\r\n    const history = useHistory();\r\n    const handle = () => {\r\n        history.push(Keys.PAGE_LOGIN);\r\n    }\r\n\r\n    return <>\r\n        <section id=\"not-found\">\r\n            <div id=\"title\">Esta página no existe en el juego</div>\r\n            <div id={\"subtitle\"} className=\"container-404\">\r\n                Oprime el botón de abajo para ser redirigido a una parte existente en el juego... <em>¡Vamos!</em>\r\n            </div>\r\n            <div className=\"container-404\">\r\n                <button id=\"button\" className=\"inputGroup\" onClick={handle}>VOLVER AL JUEGO</button>\r\n            </div>\r\n            <div className=\"circles\">\r\n                <p>404\r\n                    <small>PÁGINA NO ENCONTRADA</small>\r\n                </p>\r\n                <span className=\"circle big\"></span>\r\n                <span className=\"circle med\"></span>\r\n                <span className=\"circle small\"></span>\r\n            </div>\r\n        </section>\r\n    </>\r\n};","import React, {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Keys} from \"../../keys\";\r\nimport {User} from '../../models/user';\r\nimport {StorageService} from \"../../services/save.local.storage\";\r\nimport {SendEmail} from \"../../services/send.email\";\r\n\r\n\r\nexport const InputScore = (props: any) => {\r\n    const history = useHistory();\r\n    const [inputScore, setInputScore] = useState(-1);\r\n    let user = User;\r\n    const storageService = new StorageService();\r\n    user = storageService.get(Keys.USER);\r\n    const lvl = props.location.state ? props.location.state.level : null;\r\n    const handleButton = () => {\r\n        if (lvl) {\r\n            if (inputScore && inputScore > 0) {\r\n                let data = {user: user, level: lvl};\r\n                if (true) {\r\n                    let scores = user.score;\r\n                    if (!scores[lvl - 1]) {\r\n                        scores.push({\"level\": lvl, \"score\": inputScore});\r\n                    } else {\r\n                        scores[lvl - 1][\"level\"] = lvl;\r\n                        scores[lvl - 1][\"score\"] = inputScore;\r\n                    }\r\n                    user.currentLevel = lvl;\r\n                    storageService.set(Keys.USER, user);\r\n                    storageService.set(Keys.IS_CHANGE_INPUT, true);\r\n                } else {\r\n                    setTimeout(() => {\r\n                        alert('No se pudo enviar el mensaje por un fallo en conexión de internet.\\nSi el problema persiste comunícalo.');\r\n                    }, 1000);\r\n                    storageService.set(Keys.IS_CHANGE_INPUT, false);\r\n                }\r\n            } else {\r\n                storageService.set(Keys.IS_CHANGE_INPUT, false);\r\n            }\r\n        }\r\n        history.push(Keys.PAGE_TABLE_GAME);\r\n    }\r\n\r\n    return <>\r\n        <div className=\"container-all\">\r\n            <form>\r\n                <div id=\"id-input\" className=\"inputGroup inputGroup2\">\r\n                    <label>¿Cuál fue tu puntaje en el nivel: {lvl}?</label>\r\n                    <input type=\"number\" id=\"nombre_usuario\" className=\"password\"\r\n                           onChange={(e) => {\r\n                               setInputScore(e.target.valueAsNumber);\r\n                           }}/>\r\n                </div>\r\n                <div id=\"div-button\" className=\"inputGroup inputGroup3\">\r\n                    <button id=\"guardar-puntaje\" onClick={handleButton}>\r\n                        Guardar puntaje\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </>\r\n}","import FileSaver from 'file-saver'\r\n\r\nexport class FileDownloader {\r\n\r\n    /**\r\n     * allows download files\r\n     * @param fileName\r\n     */\r\n    downloadFile = (fileName: string) => {\r\n        FileSaver.saveAs(\"http://localhost:3000/resources/\" + fileName, fileName);\r\n    }\r\n\r\n}","import React from 'react';\r\nimport './footer.style.scss'\r\nimport {CardAuthor} from \"../cardAuthor/card.author\";\r\nimport author from '../../mocks/authors.json';\r\nimport {Keys} from \"../../keys\";\r\nimport {User} from \"../../models/user\";\r\nimport {StorageService} from \"../../services/save.local.storage\";\r\nexport const FooterComponent = (props: any) => {\r\n\r\n    const storageService = new StorageService();\r\n    let beforeSpawn;\r\n    beforeSpawn =  storageService.get(Keys.USER) as any;\r\n    let suma = 0;\r\n    beforeSpawn.score.forEach ( (numero: any) => {\r\n        suma += numero.score;\r\n    });\r\n\r\n    return <>\r\n       <div className='footer-container'>\r\n           <div className='order'>\r\n\r\n               <div className='inline-xd'>\r\n                   <img  src={beforeSpawn.icon.icon} alt={beforeSpawn.name}/>\r\n               </div>\r\n\r\n               <div className='custom text inline-xd'>\r\n                   <span>{beforeSpawn.icon.name}</span>\r\n               </div>\r\n\r\n               <div className='custom-order text inline-xd'>\r\n                   <strong>Nivel Actual:</strong> <span> {beforeSpawn.currentLevel}</span>\r\n               </div>\r\n\r\n               <div className='custom-order text inline-xd'>\r\n                   <strong>Puntaje Total: </strong><span>{suma}</span>\r\n               </div>\r\n           </div>\r\n\r\n       </div>\r\n    </>\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport './tableGame.scss'\r\nimport {StorageService} from \"../../services/save.local.storage\";\r\nimport {Keys} from \"../../keys\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {FileDownloader} from \"../../services/file.downloader.service\";\r\nimport {BoardMap} from \"./map\";\r\nimport level from '../../mocks/levels.json';\r\nimport {FooterComponent} from \"../../components/footer/footer.component\";\r\nimport {User} from \"../../models/user\";\r\n\r\nconst storageService = new StorageService();\r\nconst rows = 10;\r\nconst columns = 23;\r\nexport const TableGame = (props: any) => {\r\n\r\n    const history = useHistory();\r\n    const storageService = new StorageService();\r\n    const map = new BoardMap();\r\n    useEffect(() => {\r\n        let user;\r\n        if (user = storageService.get(Keys.USER)) {\r\n            if (user.icon !== \"\") {\r\n                initializeGame();\r\n            } else {\r\n                setTimeout(() => {\r\n                    alert('No has elegido un autor, por favor elige uno.');\r\n                }, 1000);\r\n                console.log(\"No se ha elegido autor\");\r\n                history.push(Keys.PAGE_CREATE_USER);\r\n            }\r\n        } else {\r\n            setTimeout(() => {\r\n                alert('No has creado un usuario, por favor crea un usuario para jugar.');\r\n            }, 10);\r\n            console.log(\"No hay usuario\")\r\n            history.push(Keys.PAGE_LOGIN);\r\n        }\r\n    }, [])\r\n\r\n    const initializeGame = () => {\r\n        //map.saveInitialMap(); //comentar esta línea, pues se usa para cambios de mapa en pruebas.\r\n        let file = new FileDownloader();\r\n        //file.downloadFile('COMPRENSIONLECTORA_1.zip')\r\n        let b = document.body;\r\n        let character = document.getElementById('character');\r\n        let viewBox = document.querySelector('#viewbox');\r\n        let width;\r\n        let height;\r\n        if (character instanceof HTMLElement) {\r\n            width = character.offsetWidth;\r\n            height = character.offsetHeight;\r\n            let fps = 30;\r\n            let allowance = 6;\r\n            let space = 10;\r\n            let columns = 10;\r\n            let rows = 10;\r\n            let p = Math.floor(character.offsetWidth / columns);\r\n            let q = allowance * p;\r\n            let charWidth = width - q;\r\n            if (storageService.get(Keys.IS_CHANGE_INPUT)) {\r\n                let row = storageService.get(Keys.AUX_SPAWN).r;\r\n                let column = storageService.get(Keys.AUX_SPAWN).c;\r\n                changeSpawn(row, column);\r\n            } else if (storageService.get(Keys.IS_CHANGE_INPUT) !== null) {\r\n                setTimeout(() => {\r\n                    alert('No ingresó puntaje para el nivel.')\r\n                }, 1000);\r\n            }\r\n            let mapTable = storageService.get(Keys.MAP);\r\n            let z = new Game(character, viewBox, mapTable, allowance, space, columns, rows,\r\n                charWidth, width, height, fps, history);\r\n            z.initialize();\r\n        }\r\n    }\r\n\r\n    const list = () => {\r\n        let list: JSX.Element[] = [];\r\n        let quarters: JSX.Element[] = [];\r\n        for (let i = 0; i < rows; i++) {\r\n            quarters = [];\r\n            for (let e = 0; e < columns; e++) {\r\n                quarters.push(<div key={'s' + e + i} className=\"col\" data-game-col={e}></div>);\r\n            }\r\n            list.push(<div key={'s' + i} className=\"row\" data-game-row={i}>{quarters}</div>)\r\n        }\r\n        return list;\r\n    }\r\n\r\n\r\n    return <>\r\n        <div className=\"container-game\">\r\n            <div className=\"screen\" id=\"viewbox\">\r\n                {list()}\r\n                <div className=\"character hide\" id=\"character\">\r\n                </div>\r\n            </div>\r\n            {storageService.get(Keys.USER) ? <FooterComponent></FooterComponent> : \"\"}\r\n        </div>\r\n    </>\r\n}\r\n/**\r\n * change the spawn by the level coordinates\r\n * @param r row\r\n * @param c column\r\n */\r\nconst changeSpawn = (r: number, c: number) => {\r\n    let beforeSpawn: any = storageService.get(Keys.SPAWN);\r\n    let mapLS = new BoardMap();\r\n    mapLS.saveMap(r, c, 'S');\r\n    mapLS.saveMap(beforeSpawn.i, beforeSpawn.j, ' ');\r\n    mapLS.saveNewSpawn(r, c);\r\n    storageService.set(Keys.IS_CHANGE_INPUT, false);\r\n}\r\n\r\nclass Game {\r\n    private character: HTMLElement;\r\n    private viewbox: Element | any;\r\n    private map: string[][];\r\n    private allowance: number;\r\n    private space: number;\r\n    private columns: number;\r\n    private rows: number;\r\n    private charWidth: number;\r\n    private width: number;\r\n    private height: number;\r\n    private fps: number;\r\n    private left: number;\r\n    private top: number;\r\n    private activeKeyX: any;\r\n    private activeKeyY: any;\r\n    private onLand: boolean;\r\n    private position: { x: number; y: number };\r\n    private jumpSpeed: number;\r\n    private hasEvent: boolean;\r\n    private scroll: number;\r\n    private animation: null;\r\n    private won: boolean;\r\n    private dead: boolean;\r\n    private history: any;\r\n    private open: boolean;\r\n    mapLS = new BoardMap();\r\n\r\n    constructor(character: HTMLElement, viewbox: Element | any, map: string[][], allowance: number, space: number,\r\n                columns: number, rows: number, charWidth: number, width: number, height: number, fps: number, history: any) {\r\n        this.character = character;\r\n        this.viewbox = viewbox;\r\n        this.map = map;\r\n        this.allowance = allowance;\r\n        this.space = space;\r\n        this.columns = columns;\r\n        this.rows = rows;\r\n        this.charWidth = charWidth;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.fps = fps;\r\n        this.left = 0;\r\n        this.top = 0;\r\n        this.activeKeyX = null;\r\n        this.activeKeyY = null;\r\n        this.onLand = true;\r\n        this.position = {x: 0, y: 0};\r\n        this.jumpSpeed = 0;\r\n        this.hasEvent = false;\r\n        this.scroll = 0;\r\n        this.animation = null;\r\n        this.won = false;\r\n        this.dead = false;\r\n        this.history = history;\r\n        this.open = false;\r\n    }\r\n\r\n    gameWin(row: number, column: number) {\r\n        if (this.won === false) {\r\n            this.won = true;\r\n\r\n            setTimeout(() => {\r\n                let total = 0;\r\n                let user = User;\r\n                user = storageService.get(Keys.USER);\r\n                user.score.forEach((element: any) => {\r\n                    total += element.score;\r\n                })\r\n                changeSpawn(row, column);\r\n                storageService.set(Keys.IS_CHANGE_INPUT, true);\r\n                window.location.reload();\r\n                alert('!Felicidades!\\nHaz logrado pasar todos los niveles.\\nTu puntaje final fue de ' + total);\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * What to do when the user is at the level.\r\n     * @param levelName\r\n     * @param row\r\n     * @param column\r\n     */\r\n    inLevel(levelName: any, row: number, column: number) {\r\n        if (this.dead === false) {\r\n            //this.character.classList.add('dead');\r\n            //this.dead = true;\r\n\r\n            //setTimeout(() => {\r\n            //    alert('Está entrando al nivel...');\r\n            //}, 1000);\r\n            //this.map;\r\n            let levelJson = this.selectorLevel(levelName);\r\n            if (!this.open) {\r\n                if (levelJson) {\r\n                    let fileDownloader = new FileDownloader();\r\n                    switch (levelJson.type) {\r\n                        case Keys.TYPE_ZIP:\r\n                            //fileDownloader.downloadFile(levelJson.resource);\r\n                            console.log(\"Es un ZIp\");\r\n                            break;\r\n                        case Keys.TYPE_EDUCAPLAY:\r\n                            window.open(levelJson.resource, '_blank', \"shilpijain\", false);\r\n                            window.focus();\r\n                            console.log(\"Es una página externa\")\r\n                            break;\r\n                        case Keys.TYPE_HTML:\r\n                            if (levelJson.info) {\r\n                                fileDownloader.downloadFile(levelJson.info);\r\n                            }\r\n                            window.open(levelJson.resource, '_blank', \"shilpijain\", false);\r\n                            window.focus();\r\n                            break;\r\n                        default:\r\n                            console.log(\"Este tipo de juego no existe\");\r\n                            break;\r\n                    }\r\n                    let lvl = Number(levelName);\r\n                    this.history.push({\r\n                        pathname: Keys.PAGE_INPUT_SCORE,\r\n                        state: {level: lvl},\r\n                    });\r\n                    if (!storageService.get(Keys.IS_CHANGE_INPUT)) {\r\n                        storageService.set(Keys.AUX_SPAWN, {r: row, c: column});\r\n                    }\r\n                    this.open = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * find and return the level in the levels json.\r\n     * @param levelName\r\n     */\r\n    selectorLevel(levelName: string) {\r\n        let levels = level;\r\n        let lvlJson: any;\r\n        levels.forEach((lvl) => {\r\n            if (lvl.level === levelName) {\r\n                lvlJson = lvl;\r\n            }\r\n        })\r\n        return lvlJson;\r\n    }\r\n\r\n    changeLvl() {\r\n        this.position.x += 38;\r\n    }\r\n\r\n    collidable(o: string) {\r\n        if (o === '*' || o === '#' || o === 'H') {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    collision(c: number, d: string) {\r\n        let x = this.position.x;\r\n        let y = this.position.y;\r\n        let m = this.map;\r\n        let w = this.width;\r\n        let h = this.height;\r\n        let a = this.allowance;\r\n        let s = this.space;\r\n        let i = 0;\r\n        let j = 0;\r\n        let k = 0;\r\n        let l = 0;\r\n\r\n        if (d === 'u') {\r\n            i = Math.floor((y + h - (s * 2) + 2 + c) / h);\r\n            k = Math.floor((y + h - (s * 2) + 2 + c) / h);\r\n        } else if (d === 'd') {\r\n            i = Math.floor((y + h + c) / h);\r\n            k = Math.floor((y + h + c) / h);\r\n        } else if (d === 'l') {\r\n            j = Math.floor((x + c + (a * 2)) / w);\r\n            l = Math.floor((x + c + (a * 2)) / w);\r\n        } else if (d === 'r') {\r\n            j = Math.floor((x + w + c - (a * 2)) / w);\r\n            l = Math.floor((x + w + c - (a * 2)) / w);\r\n        }\r\n\r\n        if (d === 'l' || d === 'r') {\r\n            i = Math.floor((y + h - (s * 2) + 2) / h);\r\n            k = Math.floor((y + h - 1) / h);\r\n        } else if (d === 'u' || d === 'd') {\r\n            j = Math.floor((x + (a * 2)) / w);\r\n            l = Math.floor((x + w - (a * 2) - 1) / w);\r\n        }\r\n        let boxName: string = \" \";\r\n        if (i && j) {\r\n            boxName = m[i][j];\r\n            if (boxName) {\r\n                if (boxName === 'X') {\r\n                    console.log(\"Hola\");\r\n                    //this.inLevel(\"Tipo 1\", i, j);\r\n                }\r\n                if (!isNaN(Number(boxName)) && boxName !== ' ') {\r\n                    this.inLevel(boxName, i, j);\r\n                } else if (boxName === 'O') {\r\n                    this.gameWin(i, j);\r\n                }\r\n            }\r\n        }\r\n        try {\r\n            let o = m[i][j];\r\n            let p = m[k][l];\r\n\r\n\r\n            if (this.collidable(o) || this.collidable(p)) {\r\n                return {\r\n                    x: (j * w),\r\n                    y: (i * h)\r\n                };\r\n            } else {\r\n                return null;\r\n            }\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    moveCharacter(d: number, e: string) {\r\n        let a = this.allowance;\r\n        let w = this.width;\r\n        let o: any;\r\n        o = this.collision(d, e);\r\n\r\n        if (o === null) {\r\n            this.position.x += Math.floor(d);\r\n        } else {\r\n            if (e === 'l') {\r\n                this.position.x = Math.floor(o.x) + w - (a * 2);\r\n            } else if (e === 'r') {\r\n                this.position.x = Math.floor(o.x) - w + (a * 2);\r\n            }\r\n        }\r\n    }\r\n\r\n    gravity() {\r\n        let h = this.height;\r\n        let s = this.space;\r\n        let f = Math.floor(h * 0.2);\r\n        let g = (this.jumpSpeed >= 0) ? f : this.jumpSpeed;\r\n        let p: any = this.collision(g, 'd');\r\n\r\n        if (p === null) {\r\n            this.onLand = false;\r\n\r\n            this.position.y += g;\r\n        } else {\r\n            this.position.y = p.y - h;\r\n            this.jumpSpeed = 0;\r\n            this.onLand = true;\r\n        }\r\n\r\n        if (this.activeKeyY !== null && g < 0) {\r\n            let o: any = this.collision(g, 'u');\r\n\r\n            if (o === null) {\r\n                this.jumpSpeed += (f / 2);\r\n            } else {\r\n                this.jumpSpeed = 0;\r\n                this.position.y = o.y + h - (s * 2) + 2;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderCharacter() {\r\n        let c = this.character;\r\n        let icon: string;\r\n        if (storageService.get(Keys.USER)) {\r\n            icon = storageService.get(Keys.USER).icon.icon;\r\n            c.style.backgroundImage = \"url(\" + icon + \")\";\r\n        }\r\n        //console.log(storageService.get(Keys.USER).icon.icon);\r\n        c.style.top = this.position.y + 'px';\r\n        c.style.left = this.position.x + 'px';\r\n    }\r\n\r\n    animateCharacter(mode: string) {\r\n        let c = this.character;\r\n\r\n        if (mode === 'show') {\r\n            c.classList.add('move');\r\n\r\n            let a = this.activeKeyX;\r\n\r\n            if (a === 37) {\r\n                c.classList.add('flip');\r\n            } else if (a === 39) {\r\n                c.classList.remove('flip');\r\n            }\r\n        } else if (mode === 'hide') {\r\n            c.classList.remove('move');\r\n        }\r\n    }\r\n\r\n    createControls() {\r\n        if (this.hasEvent === false) {\r\n            this.hasEvent = true;\r\n\r\n            let b = document.body;\r\n\r\n            b.addEventListener('keydown', (e) => {\r\n                if (e.keyCode === 38 && this.activeKeyY === null && this.onLand === true) {\r\n                    this.activeKeyY = 38;\r\n                    this.jumpSpeed = Math.floor(this.height * -0.6);\r\n                } else if ((e.keyCode === 37 || e.keyCode === 39) && this.activeKeyX === null) {\r\n                    this.activeKeyX = e.keyCode;\r\n                    this.animateCharacter('show');\r\n                }\r\n            });\r\n\r\n            b.addEventListener('keyup', (e) => {\r\n                if (e.keyCode === 37 || e.keyCode === 39) {\r\n                    this.activeKeyX = null;\r\n\r\n                    this.animateCharacter('hide');\r\n                } else if (e.keyCode === 38) {\r\n                    this.activeKeyY = null;\r\n                    this.jumpSpeed = 0;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    createMap() {\r\n        let m = this.map;\r\n        let v = this.viewbox;\r\n        let s;\r\n        if (\"children\" in v) {\r\n            s = v.children;\r\n        }\r\n        let w = this.width;\r\n        let h = this.height;\r\n\r\n        for (let r of s) {\r\n            let d = r.children;\r\n            let i = +r.dataset.gameRow;\r\n\r\n            for (let c of d) {\r\n                let j = +c.dataset.gameCol;\r\n\r\n                if (m[i][j] === '#') {\r\n                    c.classList.add('lawn');\r\n                } else if (m[i][j] === 'H') {\r\n                    c.classList.add('ground');\r\n                } else if (m[i][j] === 'O') {\r\n                    c.classList.add('finish');\r\n                } else if (m[i][j] === '*' || m[i][j] === 'L') {\r\n                    c.classList.add('block');\r\n                } else if (m[i][j] === ' ') {\r\n                    c.classList.add('space');\r\n                } else if (m[i][j] === 'S') {\r\n                    this.position = {x: j * w, y: i * h};\r\n                } else if (!isNaN(Number(m[i][j])) && m[i][j]) {\r\n                    c.classList.add('lvl-' + m[i][j]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    initializeCharacter() {\r\n        let i = this.position.y;\r\n        let j = this.position.x;\r\n        let c = this.character;\r\n        let u = this.charWidth;\r\n\r\n        c.classList.remove('hide');\r\n\r\n        this.renderCharacter();\r\n    }\r\n\r\n    render() {\r\n        let m = this;\r\n        let a = m.activeKeyX;\r\n        let x = m.position.x;\r\n        let y = m.position.y;\r\n\r\n        setTimeout(() => {\r\n            window.requestAnimationFrame(m.render.bind(m));\r\n        }, 1000 / m.fps);\r\n\r\n        if (a !== null) {\r\n            let u = m.charWidth;\r\n            let c = m.character;\r\n\r\n            if (this.won === false) {\r\n                if (a === 37) {\r\n                    m.moveCharacter(Math.floor(u * -0.15), 'l');\r\n                } else if (a === 39) {\r\n                    m.moveCharacter(Math.floor(u * 0.15), 'r');\r\n                }\r\n            }\r\n        }\r\n\r\n        m.gravity();\r\n\r\n        m.viewbox.style.top = (y > (m.height * 9)) ? ((m.height * -5) + 'px') : '0';\r\n\r\n        m.renderCharacter();\r\n    }\r\n\r\n    initialize() {\r\n        this.won = false;\r\n        this.dead = false;\r\n\r\n        this.viewbox.classList.add('active');\r\n\r\n        if (this.hasEvent === false) {\r\n            this.render();\r\n        }\r\n\r\n        this.createControls();\r\n        this.createMap();\r\n        this.initializeCharacter();\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport {LoginPage} from \"./pages/login/login\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport {CreateUserPage} from \"./pages/createUser/createUser\";\r\nimport {PageNotFound} from \"./pages/pageNotFound/pageNotFound\";\r\nimport {InputScore} from \"./pages/inputScore/inputScore\";\r\nimport {TableGame} from \"./pages/tableGame/tableGame\";\r\nimport {Keys} from \"./keys\";\r\n\r\nexport const App = (props: any) => {\r\n  return <>\r\n    <BrowserRouter >\r\n            <Switch>\r\n                <Route exact path={Keys.PAGE_INPUT_SCORE} component={InputScore}/>\r\n                <Route exact path={Keys.PAGE_LOGIN} component={LoginPage}/>\r\n                <Route exact path={Keys.PAGE_CREATE_USER} component={CreateUserPage}/>\r\n                <Route exact path={Keys.PAGE_TABLE_GAME} component={TableGame}/>\r\n                <Route component={PageNotFound}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n      </>\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nrequire('dotenv').config({path: __dirname + '.env'})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}